from __init__ import *
import simulate
import numpy as np
import matplotlib.pyplot as plt

# thrust=simulate.simulator(5)['thrust']
# torque=simulate.simulator(5)['torque']
# power=simulate.simulator(5)['power']
sigma=np.zeros((4))
CT=np.zeros((4,12))
C_q=np.zeros((4,12))
C_q_dash=np.zeros((4,12))
T_sigma=np.zeros((4,12))
Q_sigma=np.zeros((4,12))
Q_sigma_dash=np.zeros((4,12))
collective_angle=np.linspace(1,12,12)

with open('input_files/simple_rotor.json', 'r') as file: 
    data = json.load(file) 

for number_of_blades in range(2,6):
    data['number_of_blades'] = number_of_blades
    with open('input_files/simple_rotor.json', 'w') as file: 
        json.dump(data, file) 
    for collective in range(1,13):
        result=simulate.simulator(collective)
        sigma[number_of_blades-2]= result['non_dims']['sigma']
        CT[number_of_blades-2][collective-1]= result['non_dims']['CT']
        C_q[number_of_blades-2][collective-1]= result['non_dims']['C_q']
        C_q_dash[number_of_blades-2][collective-1]= result['non_dims']['C_q_dash']
        T_sigma[number_of_blades-2][collective-1]= result['non_dims']['T_sigma']
        Q_sigma[number_of_blades-2][collective-1]= result['non_dims']['Q_sigma']
        Q_sigma_dash[number_of_blades-2][collective-1]= result['non_dims']['Q_sigma_dash']

CT_exp_2blade=np.array([[0.00028,0.000873,0.00248,0.0042,0.00650,0.00847,0.00990],
                        [1,2,4,6,8,10,12]])
CT_exp_3blade=np.array([[0.00102,0.00298,0.00548,0.00833,0.01125,0.01370],
                        [2,4,6,8,10,12]])
CT_exp_4blade=np.array([[0.000287,0.001042,0.00214,0.00338,0.00473,0.00645,0.00792,0.00981,0.01182,0.01382,0.01596,0.01745],
                        [1,2,3,4,5,6,7,8,9,10,11,12]])
CT_exp_5blade=np.array([[0.001181,0.00362,0.00694,0.01103,0.01548,0.02],
                        [2,4,6,8,10,12]])

plt.plot(collective_angle,CT[0],label='2-blade rotor')
plt.plot(CT_exp_2blade[1],CT_exp_2blade[0],'--o',label='2-blade experiment')
plt.plot(collective_angle,CT[1],label='3-blade rotor')
plt.plot(CT_exp_3blade[1],CT_exp_3blade[0],'--o',label='3-blade experiment')
plt.plot(collective_angle,CT[2],label='4-blade rotor')
plt.plot(CT_exp_4blade[1],CT_exp_4blade[0],'--o',label='4-blade experiment')
plt.plot(collective_angle,CT[3],label='5-blade rotor')
plt.plot(CT_exp_5blade[1],CT_exp_5blade[0],'--o',label='5-blade experiment')
plt.legend()
plt.title('$C_T$ vs collective')
plt.xlabel('collective angle in degrees')
plt.ylabel('$C_T$')
plt.show()

C_q_dash_exp_2blade=np.array([[0.000003,0.000017,0.000083,0.000208,0.000386,0.000583,0.00077],
                       [1,2,4,6,8,10,12]])
C_q_dash_exp_3blade=np.array([[0.000021,0.000115,0.000289,0.000550,0.000863,0.001172],
                       [2,4,6,8,10,12]])
C_q_dash_exp_4blade=np.array([[0.000006,0.000032,0.000070,0.000142,0.000231,0.000352,0.000475,0.000652,0.000894,0.001127,0.00144,0.00164],
                       [1,2,3,4,5,6,7,8,9,10,11,12]])
C_q_dash_exp_5blade=np.array([[0.000032,0.000158,0.000442,0.000848,0.001397,0.00204],
                       [2,4,6,8,10,12]])

plt.plot(collective_angle,C_q_dash[0],label='2-blade rotor')
plt.plot(C_q_dash_exp_2blade[1],C_q_dash_exp_2blade[0],'--o',label='2-blade experiment')
plt.plot(collective_angle,C_q_dash[1],label='3-blade rotor')
plt.plot(C_q_dash_exp_3blade[1],C_q_dash_exp_3blade[0],'--o',label='3-blade experiment')
plt.plot(collective_angle,C_q_dash[2],label='4-blade rotor')
plt.plot(C_q_dash_exp_4blade[1],C_q_dash_exp_4blade[0],'--o',label='4-blade experiment')
plt.plot(collective_angle,C_q_dash[3],label='5-blade rotor')
plt.plot(C_q_dash_exp_5blade[1],C_q_dash_exp_5blade[0],'--o',label='5-blade experiment')
plt.legend()
plt.title('$C_Q^\'$ vs collective')
plt.xlabel('collective angle in degrees')
plt.ylabel('$C_Q^\'$')
plt.show()

#print(result['thrust'])